openapi: 3.0.2
info:
  title: ''
  version: ''
paths:
  /api/users/:
    get:
      operationId: listUsers
      description: ''
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    post:
      operationId: createUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserCreate'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCreate'
          description: ''
      tags:
      - api
  /api/users/me/:
    get:
      operationId: meUser
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    put:
      operationId: meUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    patch:
      operationId: meUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    delete:
      operationId: meUser
      description: ''
      parameters: []
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/users/{id}/:
    get:
      operationId: retrieveUser
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: "A unique integer value identifying this \u041F\u043E\u043B\u044C\
          \u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044C."
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    put:
      operationId: updateUser
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: "A unique integer value identifying this \u041F\u043E\u043B\u044C\
          \u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044C."
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateUser
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: "A unique integer value identifying this \u041F\u043E\u043B\u044C\
          \u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044C."
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyUser
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: "A unique integer value identifying this \u041F\u043E\u043B\u044C\
          \u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044C."
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/categories/:
    get:
      operationId: listCategorys
      description: Categories list with subcategories.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Category'
          description: ''
      tags:
      - api
  /api/products/:
    get:
      operationId: listProducts
      description: Products list.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Product'
          description: ''
      tags:
      - api
  /api/shopping_cart/{id}/:
    get:
      operationId: retrieveShoppingCart
      description: "\u041F\u043E\u043B\u0443\u0447\u0435\u043D\u0438\u0435 \u0441\u043F\
        \u0438\u0441\u043A\u0430 \u0442\u043E\u0432\u0430\u0440\u043E\u0432 \u0432\
        \ \u043A\u043E\u0440\u0437\u0438\u043D\u0435 \u043F\u043E\u043B\u044C\u0437\
        \u043E\u0432\u0430\u0442\u0435\u043B\u044F."
      parameters:
      - name: id
        in: path
        required: true
        description: "A unique integer value identifying this \u041A\u043E\u0440\u0437\
          \u0438\u043D\u0430."
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShoppingCart'
          description: ''
      tags:
      - api
  /api/users/activation/:
    post:
      operationId: activationUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Activation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Activation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Activation'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activation'
          description: ''
      tags:
      - api
  /api/users/resend_activation/:
    post:
      operationId: resendActivationUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
      tags:
      - api
  /api/users/reset_password/:
    post:
      operationId: resetPasswordUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
      tags:
      - api
  /api/users/reset_password_confirm/:
    post:
      operationId: resetPasswordConfirmUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordResetConfirm'
          description: ''
      tags:
      - api
  /api/users/reset_username/:
    post:
      operationId: resetUsernameUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
      tags:
      - api
  /api/users/reset_username_confirm/:
    post:
      operationId: resetUsernameConfirmUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsernameResetConfirm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UsernameResetConfirm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UsernameResetConfirm'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsernameResetConfirm'
          description: ''
      tags:
      - api
  /api/users/set_password/:
    post:
      operationId: setPasswordUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetPassword'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SetPassword'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SetPassword'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetPassword'
          description: ''
      tags:
      - api
  /api/users/set_username/:
    post:
      operationId: setUsernameUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetUsername'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SetUsername'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SetUsername'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetUsername'
          description: ''
      tags:
      - api
  /api/shopping_cart/{shopping_cart_id}/shopping_cart_item/:
    post:
      operationId: createShoppingCartItem
      description: "\u0414\u043E\u0431\u0430\u0432\u043B\u0435\u043D\u0438\u0435 \u043F\
        \u0440\u043E\u0434\u0443\u043A\u0442\u0430 \u0432 \u043A\u043E\u0440\u0437\
        \u0438\u043D\u0443."
      parameters:
      - name: shopping_cart_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShoppingCartItem'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ShoppingCartItem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ShoppingCartItem'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShoppingCartItem'
          description: ''
      tags:
      - api
  /api/auth/token/login/:
    post:
      operationId: createTokenCreate
      description: Use this endpoint to obtain user authentication token.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenCreate'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenCreate'
          description: ''
      tags:
      - api
  /api/auth/token/logout/:
    post:
      operationId: createTokenDestroy
      description: Use this endpoint to logout user (remove user authentication token).
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
          multipart/form-data:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - api
  /api/shopping_cart/{shopping_cart_id}/shopping_cart_item/{id}/:
    put:
      operationId: updateShoppingCartItem
      description: "\u0418\u0437\u043C\u0435\u043D\u0435\u043D\u0438\u0435 \u043A\u043E\
        \u043B-\u0432\u0430 \u043F\u0440\u043E\u0434\u0443\u043A\u0442\u0430 \u0432\
        \ \u043A\u043E\u0440\u0437\u0438\u043D\u0435."
      parameters:
      - name: shopping_cart_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShoppingCartItem'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ShoppingCartItem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ShoppingCartItem'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShoppingCartItem'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateShoppingCartItem
      description: "\u0414\u043E\u0431\u0430\u0432\u043B\u0435\u043D\u0438\u0435,\
        \ \u0438\u0437\u043C\u0435\u043D\u0435\u043D\u0438\u0435, \u0443\u0434\u0430\
        \u043B\u0435\u043D\u0438\u0435 \u0442\u043E\u0432\u0430\u0440\u043E\u0432\
        \ \u0432 \u043A\u043E\u0440\u0437\u0438\u043D\u0435."
      parameters:
      - name: shopping_cart_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShoppingCartItem'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ShoppingCartItem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ShoppingCartItem'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShoppingCartItem'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyShoppingCartItem
      description: "\u0414\u043E\u0431\u0430\u0432\u043B\u0435\u043D\u0438\u0435,\
        \ \u0438\u0437\u043C\u0435\u043D\u0435\u043D\u0438\u0435, \u0443\u0434\u0430\
        \u043B\u0435\u043D\u0438\u0435 \u0442\u043E\u0432\u0430\u0440\u043E\u0432\
        \ \u0432 \u043A\u043E\u0440\u0437\u0438\u043D\u0435."
      parameters:
      - name: shopping_cart_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
components:
  schemas:
    User:
      type: object
      properties:
        email:
          type: string
          format: email
          readOnly: true
        id:
          type: integer
          readOnly: true
    Category:
      type: object
      properties:
        name:
          type: string
          description: "\u041D\u0430\u0438\u043C\u0435\u043D\u043E\u0432\u0430\u043D\
            \u0438\u0435 \u043A\u0430\u0442\u0435\u0433\u043E\u0440\u0438\u0438"
          maxLength: 150
        slug:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
          maxLength: 150
        image:
          type: string
          format: binary
        subcategories:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                description: "\u041D\u0430\u0438\u043C\u0435\u043D\u043E\u0432\u0430\
                  \u043D\u0438\u0435 \u043F\u043E\u0434\u043A\u0430\u0442\u0435\u0433\
                  \u043E\u0440\u0438\u0438"
                maxLength: 150
              slug:
                type: string
                pattern: ^[-a-zA-Z0-9_]+$
                maxLength: 150
              image:
                type: string
                format: binary
            required:
            - name
            - slug
      required:
      - name
      - slug
      - subcategories
    Product:
      type: object
      properties:
        name:
          type: string
          description: "\u041D\u0430\u0438\u043C\u0435\u043D\u043E\u0432\u0430\u043D\
            \u0438\u0435 \u043A\u0430\u0442\u0435\u0433\u043E\u0440\u0438\u0438"
          maxLength: 150
        slug:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
          maxLength: 150
        category:
          type: string
          readOnly: true
        subcategory:
          type: string
          readOnly: true
        price:
          type: string
          format: decimal
          multipleOf: 0.01
          maximum: 10000000000000
          minimum: -10000000000000
        image_size_a:
          type: string
          format: binary
        image_size_b:
          type: string
          format: binary
        image_size_c:
          type: string
          format: binary
      required:
      - name
      - slug
      - price
    ShoppingCart:
      type: object
      properties:
        products:
          type: string
          readOnly: true
        total_count:
          type: integer
        total_coast:
          type: string
          format: decimal
          multipleOf: 0.01
          maximum: 10000000000000
          minimum: -10000000000000
    UserCreate:
      type: object
      properties:
        email:
          type: string
          format: email
          maxLength: 150
        id:
          type: integer
          readOnly: true
        password:
          type: string
          writeOnly: true
      required:
      - email
      - password
    Activation:
      type: object
      properties:
        uid:
          type: string
        token:
          type: string
      required:
      - uid
      - token
    SendEmailReset:
      type: object
      properties:
        email:
          type: string
          format: email
      required:
      - email
    PasswordResetConfirm:
      type: object
      properties:
        uid:
          type: string
        token:
          type: string
        new_password:
          type: string
      required:
      - uid
      - token
      - new_password
    UsernameResetConfirm:
      type: object
      properties:
        new_email:
          type: string
          format: email
          maxLength: 150
      required:
      - new_email
    SetPassword:
      type: object
      properties:
        new_password:
          type: string
        current_password:
          type: string
      required:
      - new_password
      - current_password
    SetUsername:
      type: object
      properties:
        current_password:
          type: string
        new_email:
          type: string
          format: email
          maxLength: 150
      required:
      - current_password
      - new_email
    ShoppingCartItem:
      type: object
      properties:
        shopping_cart:
          type: integer
        product:
          type: integer
        count:
          type: integer
        price:
          type: string
          format: decimal
          multipleOf: 0.01
          maximum: 10000000000000
          minimum: -10000000000000
      required:
      - product
      - count
    TokenCreate:
      type: object
      properties:
        password:
          type: string
        email:
          type: string
